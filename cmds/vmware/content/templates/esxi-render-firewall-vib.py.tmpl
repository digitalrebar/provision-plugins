# Render the base64 encoded Param as a file on the system

import base64
import json
import subprocess
import time
{{ template "esxi-vib-common.py.tmpl" .}}

logfile_name = "firewall_vib-{}-{}.log".format(
    time.strftime("%Y%m%d-%H%M%S"),
    script_env
)

init_logging("{}/{}".format(rackn_dir, logfile_name))

vib_file_output = {{ if .ParamExists "esxi/vib-drpy-firewall" }}"{{ .Param "esxi/vib-drpy-firewall"}}"{{ else }}rackn_dir + "/firewall.vib"{{ end }}
vib_file_content = """{{ template "DRP-Firewall-Rule.vib.base64.tmpl" .}}"""
if not vib_file_content:
    logging.error('No base64 encoded data found in template "esxi-vib-fw.base64.tmpl".')
    raise SystemError
try:
   vib_file_content=base64.b64decode(vib_file_content)
   with open(vib_file_output,"wb") as f:
        f.write(vib_file_content)
except Exception as e:
    logging.exception("Unable to write firewall vib to file.", e)
    raise SystemError

logging.debug("Installing firewall VIB and enabling rule ...")
vib_status = install_vib(vib_file_output)
logging.debug("Refreshing firewall.")
fw_refrsh = subprocess.run(
    "localcli network firewall refresh",
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
    shell=True,
    universal_newlines=True,
)
logging.debug("Firewall Refresh Status: {}".format(fw_refrsh))
logging.shutdown()
time.sleep( {{ .Param "esxi/python-sleep" }} )

